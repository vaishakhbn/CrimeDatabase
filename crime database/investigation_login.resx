<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="Button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>